/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.restu.recipebot;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.generics.LongPollingBot;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

/**
 *
 * @author Restu
 */
public class FormAdmin extends javax.swing.JFrame {

    // Database Credentials
    public String DB_URL = "jdbc:mysql://localhost:3306/db_foodrecipe";
    public String DB_USERNAME = "root";
    public String DB_PASSWORD = "";
    ResultSet rsBrg;
    Statement stm;
    private Object[][] dataTable = null;
    private String[] header = {"ChatID", "Username"};
    private RecipeBot chatbot;

    /**
     * Creates new form FormTelegramBot
     *
     * @throws java.sql.SQLException
     */
    public FormAdmin() throws SQLException {
        initComponents();

        // Inisialisasi objek Chatbot
        chatbot = new RecipeBot();

        bacaData_member();
        bacaData_user();

        bacaMember();
        bacaUser();

        bacaPesan();

        tabelUser.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                setField_user();
            }
        });

        tabelMember.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                setField_member();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtBroadcast = new javax.swing.JTextArea();
        btnBroadcast = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPesanMasukKeluar = new javax.swing.JTextArea();
        btnKunci = new javax.swing.JButton();
        btnDatabase = new javax.swing.JButton();
        btnBroadcastTo = new javax.swing.JButton();
        cmbMember = new javax.swing.JComboBox<>();
        btnKeluar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtChat_user = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnDaftar_user = new javax.swing.JButton();
        btnClear_user = new javax.swing.JButton();
        btnHapus_user = new javax.swing.JButton();
        btnEdit_user = new javax.swing.JButton();
        btnRefresh_user = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername_user = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelUser = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtChat_member = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnDaftar_member = new javax.swing.JButton();
        btnClear_member = new javax.swing.JButton();
        btnHapus_member = new javax.swing.JButton();
        btnEdit_member = new javax.swing.JButton();
        btnRefresh_member = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtUsername_member = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelMember = new javax.swing.JTable();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FoodRecipeBot - Restu Lestari");

        jLabel7.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        jLabel7.setText("Broadcast Pesan");

        txtBroadcast.setColumns(20);
        txtBroadcast.setRows(5);
        txtBroadcast.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jScrollPane2.setViewportView(txtBroadcast);

        btnBroadcast.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnBroadcast.setText("Broadcast All");
        btnBroadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBroadcastActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        jLabel8.setText("Pesan Keluar dan Masuk");

        txtPesanMasukKeluar.setEditable(false);
        txtPesanMasukKeluar.setColumns(20);
        txtPesanMasukKeluar.setRows(5);
        txtPesanMasukKeluar.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jScrollPane3.setViewportView(txtPesanMasukKeluar);

        btnKunci.setBackground(new java.awt.Color(204, 204, 255));
        btnKunci.setFont(new java.awt.Font("Poppins Medium", 1, 15)); // NOI18N
        btnKunci.setText("Kelola Kata Kunci");
        btnKunci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKunciActionPerformed(evt);
            }
        });

        btnDatabase.setBackground(new java.awt.Color(255, 204, 153));
        btnDatabase.setFont(new java.awt.Font("Poppins Medium", 1, 15)); // NOI18N
        btnDatabase.setText("Database Pesan");
        btnDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatabaseActionPerformed(evt);
            }
        });

        btnBroadcastTo.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnBroadcastTo.setText("Broadcast To");
        btnBroadcastTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBroadcastToActionPerformed(evt);
            }
        });

        cmbMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMemberActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(255, 102, 102));
        btnKeluar.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        txtChat_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        jLabel5.setText("Chat ID");

        btnDaftar_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnDaftar_user.setText("Daftar");
        btnDaftar_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaftar_userActionPerformed(evt);
            }
        });

        btnClear_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnClear_user.setText("Clear");
        btnClear_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear_userActionPerformed(evt);
            }
        });

        btnHapus_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnHapus_user.setText("Hapus");
        btnHapus_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapus_userActionPerformed(evt);
            }
        });

        btnEdit_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnEdit_user.setText("Edit");
        btnEdit_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit_userActionPerformed(evt);
            }
        });

        btnRefresh_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnRefresh_user.setText("Refresh");
        btnRefresh_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh_userActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        jLabel1.setText("Kelola User");

        jLabel2.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        jLabel2.setText("Data User");

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        jLabel4.setText("Username");

        txtUsername_user.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        txtUsername_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsername_userActionPerformed(evt);
            }
        });

        tabelUser.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        tabelUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Chat ID"
            }
        ));
        jScrollPane1.setViewportView(tabelUser);

        jScrollPane4.setViewportView(jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 926, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUsername_user, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtChat_user, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnDaftar_user, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnClear_user, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnHapus_user, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnEdit_user, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRefresh_user, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGap(20, 20, 20)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtUsername_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtChat_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 53, Short.MAX_VALUE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDaftar_user)
                        .addComponent(btnClear_user)
                        .addComponent(btnHapus_user)
                        .addComponent(btnEdit_user)
                        .addComponent(btnRefresh_user))
                    .addGap(15, 15, 15)))
        );

        jTabbedPane1.addTab("User", jPanel1);

        txtChat_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        jLabel6.setText("Chat ID");

        btnDaftar_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnDaftar_member.setText("Daftar");
        btnDaftar_member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaftar_memberActionPerformed(evt);
            }
        });

        btnClear_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnClear_member.setText("Clear");
        btnClear_member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear_memberActionPerformed(evt);
            }
        });

        btnHapus_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnHapus_member.setText("Hapus");
        btnHapus_member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapus_memberActionPerformed(evt);
            }
        });

        btnEdit_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnEdit_member.setText("Edit");
        btnEdit_member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit_memberActionPerformed(evt);
            }
        });

        btnRefresh_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        btnRefresh_member.setText("Refresh");
        btnRefresh_member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh_memberActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        jLabel3.setText("Kelola Member");

        jLabel9.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        jLabel9.setText("Data Member");

        jLabel10.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        jLabel10.setText("Username");

        txtUsername_member.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        txtUsername_member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsername_memberActionPerformed(evt);
            }
        });

        tabelMember.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        tabelMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Chat ID"
            }
        ));
        jScrollPane6.setViewportView(tabelMember);

        jScrollPane5.setViewportView(jScrollPane6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 926, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUsername_member, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtChat_member, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(btnDaftar_member, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnClear_member, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnHapus_member, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnEdit_member, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRefresh_member, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGap(20, 20, 20)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel9))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtUsername_member, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(txtChat_member, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 53, Short.MAX_VALUE))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDaftar_member)
                        .addComponent(btnClear_member)
                        .addComponent(btnHapus_member)
                        .addComponent(btnEdit_member)
                        .addComponent(btnRefresh_member))
                    .addGap(15, 15, 15)))
        );

        jTabbedPane1.addTab("Member", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKunci, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBroadcastTo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMember, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBroadcast, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBroadcast)
                    .addComponent(btnBroadcastTo)
                    .addComponent(cmbMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKunci)
                    .addComponent(btnDatabase)
                    .addComponent(btnKeluar))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBroadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBroadcastActionPerformed
        // TODO add your handling code here:
        String broadcastMessage = txtBroadcast.getText();

        chatbot.sendBroadcastAll(broadcastMessage);
    }//GEN-LAST:event_btnBroadcastActionPerformed

    private void btnKunciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKunciActionPerformed
        // TODO add your handling code here:
        new FormKataKunci().setVisible(true);
    }//GEN-LAST:event_btnKunciActionPerformed

    private void btnDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatabaseActionPerformed
        // TODO add your handling code here:
        new FormPesan().setVisible(true);
    }//GEN-LAST:event_btnDatabaseActionPerformed

    private void btnBroadcastToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBroadcastToActionPerformed
        // TODO add your handling code here:
        String tMember = cmbMember.getSelectedItem().toString();
        String broadcastMessage = txtBroadcast.getText();

        chatbot.sendBroadcastTo(tMember, broadcastMessage);
    }//GEN-LAST:event_btnBroadcastToActionPerformed

    private void cmbMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMemberActionPerformed
        // TODO add your handling code here:1441574211

    }//GEN-LAST:event_cmbMemberActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnDaftar_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaftar_userActionPerformed
        // TODO add your handling code here:
        String tChat = txtChat_user.getText();
        String tUsername = txtUsername_user.getText();
        if (!tChat.isEmpty() && !tUsername.isEmpty()) {
            try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
                String sql = "INSERT INTO user (chat_id, username) VALUES (?, ?)";
                PreparedStatement statement = connection.prepareStatement(sql);
                statement.setString(1, tChat);
                statement.setString(2, tUsername);
                statement.executeUpdate();
                statement.close();

                // Refresh tabel data
                bacaData_user();

                JOptionPane.showMessageDialog(null, "User added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException exception) {
                JOptionPane.showMessageDialog(null, "Error adding user: " + exception.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill in both Chat ID and Username fields.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDaftar_userActionPerformed

    private void btnClear_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear_userActionPerformed
        // TODO add your handling code here:
        txtChat_user.setText("");
        txtUsername_user.setText("");
    }//GEN-LAST:event_btnClear_userActionPerformed

    private void btnHapus_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapus_userActionPerformed
        // TODO add your handling code here:
        String tChat_user = txtChat_user.getText(); // Ambil chat_id dari field txtChat_user

        if (!tChat_user.isEmpty()) {
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
                    String sql = "DELETE FROM user WHERE chat_id=?";
                    PreparedStatement statement = connection.prepareStatement(sql);
                    statement.setString(1, tChat_user);
                    statement.executeUpdate();

                    JOptionPane.showMessageDialog(null, "User deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                    bacaData_user(); // Refresh tabel user
                    clearUserFields(); // Clear form fields
                    bacaUser(); // Refresh combobox data list

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error deleting user: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a user to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHapus_userActionPerformed

    private void btnEdit_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit_userActionPerformed
        // TODO add your handling code here:
        String tChat = txtChat_user.getText();
        String tUsername = txtUsername_user.getText();
        if (!tChat.isEmpty() && !tUsername.isEmpty()) {
            try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
                String sql = "UPDATE user SET username=? WHERE chat_id=?";
                PreparedStatement statement = connection.prepareStatement(sql);
                statement.setString(1, tUsername);
                statement.setString(2, tChat);
                statement.executeUpdate();
                statement.close();

                // Refresh tabel data
                bacaData_user();

                // Refresh combobox data list
                cmbMember.removeAllItems();
                bacaMember();

                JOptionPane.showMessageDialog(null, "User updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException exception) {
                JOptionPane.showMessageDialog(null, "Error updating user: " + exception.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill in both Chat ID and Username fields.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEdit_userActionPerformed

    private void clearUserFields() {
        txtChat_user.setText("");
        txtUsername_user.setText("");
    }

    private void btnRefresh_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh_userActionPerformed
        // TODO add your handling code here:
        bacaData_user();
        bacaPesan();
    }//GEN-LAST:event_btnRefresh_userActionPerformed

    private void txtUsername_memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsername_memberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsername_memberActionPerformed

    private void btnRefresh_memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh_memberActionPerformed
        // TODO add your handling code here:
        bacaData_member();
        cmbMember.removeAllItems();
        bacaMember();
        bacaPesan();
    }//GEN-LAST:event_btnRefresh_memberActionPerformed

    private void btnEdit_memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit_memberActionPerformed
        // TODO add your handling code here:
        String tChat = txtChat_member.getText();
        String tUsername = txtUsername_member.getText();

        if (!tChat.isEmpty() && !tUsername.isEmpty()) {
            try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
                String sql = "UPDATE member SET username=? WHERE chat_id=?";
                PreparedStatement statement = connection.prepareStatement(sql);
                statement.setString(1, tUsername);
                statement.setString(2, tChat);
                statement.executeUpdate();
                statement.close();

                JOptionPane.showMessageDialog(null, "Member updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                bacaData_member(); // Refresh tabel member
                clearMemberFields(); // Clear form fields
                bacaMember(); // Refresh combobox data list

            } catch (SQLException exception) {
                JOptionPane.showMessageDialog(null, "Error updating member: " + exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill in both Chat ID and Username fields.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEdit_memberActionPerformed

    private void btnHapus_memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapus_memberActionPerformed
        /// TODO add your handling code here:
        String tChat_member = txtChat_member.getText(); // Ambil chat_id dari field txtChat_member

        if (!tChat_member.isEmpty()) {
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this member?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
                    String sql = "DELETE FROM member WHERE chat_id=?";
                    PreparedStatement statement = connection.prepareStatement(sql);
                    statement.setString(1, tChat_member);
                    statement.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Member deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                    bacaData_member(); // Refresh tabel member
                    clearMemberFields(); // Clear form fields
                    bacaMember(); // Refresh combobox data list

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error deleting member: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a member to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHapus_memberActionPerformed

    private void btnClear_memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear_memberActionPerformed
        // TODO add your handling code here:
        txtChat_member.setText("");
        txtUsername_member.setText("");
    }//GEN-LAST:event_btnClear_memberActionPerformed

    private void btnDaftar_memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaftar_memberActionPerformed
        // TODO add your handling code here:
        String tChat_member = txtChat_member.getText();
        String tUsername_member = txtUsername_member.getText();

        if (!tChat_member.isEmpty() && !tUsername_member.isEmpty()) {
            try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
                String sql = "INSERT INTO member (chat_id, username) VALUES (?, ?)";
                PreparedStatement statement = connection.prepareStatement(sql);
                statement.setString(1, tChat_member);
                statement.setString(2, tUsername_member);
                statement.executeUpdate();
                statement.close();

                JOptionPane.showMessageDialog(null, "Member added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                bacaData_member(); // Refresh tabel member
                clearMemberFields(); // Clear form fields
                bacaMember(); // Refresh combobox data list

            } catch (SQLException exception) {
                JOptionPane.showMessageDialog(null, "Error adding member: " + exception.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill in both Chat ID and Username fields.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDaftar_memberActionPerformed

    private void txtUsername_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsername_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsername_userActionPerformed

    // method set field form jika salah satu field tabel ditekan
    private void setField_user() {
        int row = tabelUser.getSelectedRow();

        txtChat_user.setText((String) tabelUser.getValueAt(row, 0));
        txtUsername_user.setText((String) tabelUser.getValueAt(row, 1));
    }

    private void setField_member() {
        int row = tabelMember.getSelectedRow();

        txtChat_member.setText((String) tabelMember.getValueAt(row, 0));
        txtUsername_member.setText((String) tabelMember.getValueAt(row, 1));
    }

    private void clearMemberFields() {
        txtChat_member.setText("");
        txtUsername_member.setText("");
        // Add any other fields you need to clear here
    }

    // method baca data dari Mysql dimasukkan ke table pada form
    private void bacaData_member() {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
            stm = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rsBrg = stm.executeQuery("SELECT * FROM member");

            int baris = 0;
            if (rsBrg.last()) {
                baris = rsBrg.getRow();
                rsBrg.beforeFirst();
            }

            dataTable = new Object[baris][header.length];
            int x = 0;
            while (rsBrg.next()) {
                dataTable[x][0] = rsBrg.getString("chat_id");
                dataTable[x][1] = rsBrg.getString("username");
                x++;
            }

            tabelMember.setModel(new DefaultTableModel(dataTable, header));

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error fetching member data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void bacaData_user() {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
            stm = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rsBrg = stm.executeQuery("SELECT * FROM user");

            int baris = 0;
            if (rsBrg.last()) {
                baris = rsBrg.getRow();
                rsBrg.beforeFirst();
            }

            dataTable = new Object[baris][header.length];
            int x = 0;
            while (rsBrg.next()) {
                dataTable[x][0] = rsBrg.getString("chat_id");
                dataTable[x][1] = rsBrg.getString("username");
                x++;
            }

            tabelUser.setModel(new DefaultTableModel(dataTable, header));

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error fetching user data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void bacaUser() {
        cmbMember.removeAllItems(); // Clear combobox items

        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD); Statement statement = connection.createStatement()) {

            ResultSet rs = statement.executeQuery("SELECT * FROM user");
            while (rs.next()) {
                cmbMember.addItem(rs.getString("username").trim());
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error fetching user data for combobox: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void bacaMember() {
        cmbMember.removeAllItems(); // Clear combobox items

        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD); Statement statement = connection.createStatement()) {

            ResultSet rs = statement.executeQuery("SELECT * FROM member");
            while (rs.next()) {
                cmbMember.addItem(rs.getString("username").trim());
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error fetching member data for combobox: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void bacaPesan() {
        List<String> messages = new ArrayList<>(); // Store messages in a list

        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD); Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); ResultSet rs = statement.executeQuery("SELECT * FROM pesan")) {

            rs.beforeFirst();
            while (rs.next()) {
                String message = "(" + rs.getString(2).trim() + ")" + rs.getString(3).trim() + ": " + rs.getString(4).trim();
                messages.add(message); // Add each message to the list
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e);
        }

        // Display messages in the text area
        SwingUtilities.invokeLater(() -> {
            for (String message : messages) {
                txtPesanMasukKeluar.append(message + "\n");
            }
        });
    }

    public static void Call() {
        new FormLogin().setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            // Create an instance of the TelegramBotsApi to register your bot
            TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);

            // Register your bot by providing an instance of your bot class
            botsApi.registerBot((LongPollingBot) new RecipeBot());

            System.out.println("Bot started successfully!");
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //                    new FormTelegramBot().setVisible(true);
                Call();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBroadcast;
    private javax.swing.JButton btnBroadcastTo;
    private javax.swing.JButton btnClear_member;
    private javax.swing.JButton btnClear_user;
    private javax.swing.JButton btnDaftar_member;
    private javax.swing.JButton btnDaftar_user;
    private javax.swing.JButton btnDatabase;
    private javax.swing.JButton btnEdit_member;
    private javax.swing.JButton btnEdit_user;
    private javax.swing.JButton btnHapus_member;
    private javax.swing.JButton btnHapus_user;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnKunci;
    private javax.swing.JButton btnRefresh_member;
    private javax.swing.JButton btnRefresh_user;
    private javax.swing.JComboBox<String> cmbMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabelMember;
    private javax.swing.JTable tabelUser;
    private javax.swing.JTextArea txtBroadcast;
    private javax.swing.JTextField txtChat_member;
    private javax.swing.JTextField txtChat_user;
    private javax.swing.JTextArea txtPesanMasukKeluar;
    private javax.swing.JTextField txtUsername_member;
    private javax.swing.JTextField txtUsername_user;
    // End of variables declaration//GEN-END:variables

}
